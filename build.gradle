// build script classpath, inherited by subProjects
buildscript {
    repositories {
        mavenCentral()
    }
}

// resolve and apply plugins
plugins {
    id 'org.springframework.boot' version "${springBootVersion}" // main spring boot
    id 'io.spring.dependency-management' version "${springDependencyVersion}" // curated versions of spring dependencies via bom
    id 'java' // use java
    id 'war'  // build war
}

// versioning
group = 'de.itconsultingimhoff.testprojects'
version = "${projectVersion}"

// Java version
//sourceCompatibility = '11.0'
sourceCompatibility = '1.8'

configurations {
    // new developmentOnly configuration
    developmentOnly
    // add developmentOnly to runtimeClasspath
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    // add annotationProcessor to compileOnly
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// dependency repositories
repositories {
    mavenCentral()
}

// extended attributes
ext {
    set('snippetsDir', file("build/generated-snippets"))
}

// define project dependencies
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        because 'Spring Actuator endpoints let you monitor and interact with your application (JMX and HTTP)'
    }
//  implementation 'org.springframework.boot:spring-boot-starter-amqp'
//	implementation('org.springframework.boot:spring-boot-starter-cache') {
//		because 'Supports caching via @Cacheable annotation'
//	}
    //implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation('org.springframework.boot:spring-boot-starter-data-rest') {
        because 'Adding data REST endpoints'
    }
    implementation('org.springframework.boot:spring-boot-starter-hateoas') {
		because 'Adding HATEOAS via ResourceSupport base class and ResourceSupport'
	}
//    implementation('org.springframework.boot:spring-boot-starter-integration') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-jdbc') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-jersey') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-jooq') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-mail') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-quartz') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-security') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-web') { because '' }
//    implementation('org.springframework.boot:spring-boot-starter-websocket') { because '' }
//    implementation('org.apache.kafka:kafka-streams') { because '' }
//    implementation('org.flywaydb:flyway-core') { because '' }
//    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1') { because '' }
//    implementation('org.springframework.data:spring-data-rest-hal-browser') { because '' }
//    implementation('org.springframework.kafka:spring-kafka') { because '' }
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    testImplementation 'com.unboundid:unboundid-ldapsdk'
//    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
//    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
//    testImplementation 'org.springframework.kafka:spring-kafka-test'
//    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

// empty config ??
dependencyManagement {
}

// ??
test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
